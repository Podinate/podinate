/*
 * Podinate API
 *
 * The API for the simple containerisation solution Podinate
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"bytes"
	"encoding/json"
	"log"
	"net/http"
	"net/http/httptest"

	_ "github.com/lib/pq"

	"github.com/johncave/podinate/api-backend/config"
	api "github.com/johncave/podinate/api-backend/go"
)

func main() {
	log.Printf("Server starting...")

	config.Init()
	log.Println("Configurinated")

	//DefaultApiService := api.NewDefaultApiService()

	DefaultApiService := NewAPIService()
	DefaultApiController := api.NewDefaultApiController(DefaultApiService)

	router := api.NewRouter(DefaultApiController)

	log.Fatal(http.ListenAndServe(":3000", router))
	config.Cleanup()
}

// makeRequest - Make a request to the API, useful for testing
func makeRequest(method, url string, body interface{}) *httptest.ResponseRecorder {
	config.Init()
	log.Println("Configurinated")

	requestBody, _ := json.Marshal(body)
	request, _ := http.NewRequest(method, url, bytes.NewBuffer(requestBody))
	request.Header.Set("Content-Type", "application/json")
	writer := httptest.NewRecorder()

	DefaultApiService := NewAPIService()
	DefaultApiController := api.NewDefaultApiController(DefaultApiService)

	router := api.NewRouter(DefaultApiController)
	router.ServeHTTP(writer, request)
	return writer
}
