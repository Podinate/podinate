/*
Podinate API

The API for the simple containerisation solution Podinate.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
)

// checks if the Pod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pod{}

// Pod A pod is a group of container instances with identical settings, and are the basic unit of deployment on Podinate
type Pod struct {
	// The short name (slug/url) of the pod
	Id string `json:"id"`
	// The name of the pod
	Name string `json:"name"`
	// The container image to run for this pod
	Image string `json:"image"`
	// The image tag to run for this pod
	Tag string `json:"tag"`
	// The storage volumes attached to this pod
	Volumes []Volume `json:"volumes,omitempty"`
	// The environment variables to pass to the pod
	Environment []EnvironmentVariable `json:"environment,omitempty"`
	// The services to expose for this pod
	Services []Service `json:"services,omitempty"`
	// The current status of the pod
	Status *string `json:"status,omitempty"`
	// The date and time the pod was created
	CreatedAt *string `json:"created_at,omitempty"`
	// The global Resource ID of the pod
	ResourceId *string `json:"resource_id,omitempty"`
}

// NewPod instantiates a new Pod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPod(id string, name string, image string, tag string) *Pod {
	this := Pod{}
	this.Id = id
	this.Name = name
	this.Image = image
	this.Tag = tag
	return &this
}

// NewPodWithDefaults instantiates a new Pod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodWithDefaults() *Pod {
	this := Pod{}
	return &this
}

// GetId returns the Id field value
func (o *Pod) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Pod) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Pod) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Pod) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Pod) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Pod) SetName(v string) {
	o.Name = v
}

// GetImage returns the Image field value
func (o *Pod) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *Pod) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *Pod) SetImage(v string) {
	o.Image = v
}

// GetTag returns the Tag field value
func (o *Pod) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *Pod) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *Pod) SetTag(v string) {
	o.Tag = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *Pod) GetVolumes() []Volume {
	if o == nil || IsNil(o.Volumes) {
		var ret []Volume
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pod) GetVolumesOk() ([]Volume, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *Pod) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []Volume and assigns it to the Volumes field.
func (o *Pod) SetVolumes(v []Volume) {
	o.Volumes = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *Pod) GetEnvironment() []EnvironmentVariable {
	if o == nil || IsNil(o.Environment) {
		var ret []EnvironmentVariable
		return ret
	}
	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pod) GetEnvironmentOk() ([]EnvironmentVariable, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *Pod) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given []EnvironmentVariable and assigns it to the Environment field.
func (o *Pod) SetEnvironment(v []EnvironmentVariable) {
	o.Environment = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *Pod) GetServices() []Service {
	if o == nil || IsNil(o.Services) {
		var ret []Service
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pod) GetServicesOk() ([]Service, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *Pod) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []Service and assigns it to the Services field.
func (o *Pod) SetServices(v []Service) {
	o.Services = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Pod) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pod) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Pod) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Pod) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Pod) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pod) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Pod) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Pod) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *Pod) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pod) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *Pod) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *Pod) SetResourceId(v string) {
	o.ResourceId = &v
}

func (o Pod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["image"] = o.Image
	toSerialize["tag"] = o.Tag
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resource_id"] = o.ResourceId
	}
	return toSerialize, nil
}

type NullablePod struct {
	value *Pod
	isSet bool
}

func (v NullablePod) Get() *Pod {
	return v.value
}

func (v *NullablePod) Set(val *Pod) {
	v.value = val
	v.isSet = true
}

func (v NullablePod) IsSet() bool {
	return v.isSet
}

func (v *NullablePod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePod(val *Pod) *NullablePod {
	return &NullablePod{value: val, isSet: true}
}

func (v NullablePod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
