openapi: 3.0.0
info:
  title: Podinate API
  description: The API for the simple containerisation solution Podinate
  version: 0.0.1
servers:
  - url: https://api.podinate.com/v0
    description: Main (production) server
  - url: http://staging-api.example.com
    description: Internal staging server for testing
paths:
  /project:
    get:
      summary: Returns a list of projects.
      description: Returns all of the projects within the user's account. 
      parameters:
       - $ref: '#/components/parameters/account'
      responses:
        '200':    # status code
          description: A JSON array of apps
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/App'
        '500':
          description: An internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: number
                    description: The error code for this error
                    example: 500
                
    post:
      summary: Create a new project
      description: Creating a new project
      parameters:
        - $ref: '#/components/parameters/account'
      requestBody:
        description: A JSON object containing the information needed to create a new project
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/App'
      responses:
        '201':
          description: The project was created successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/App'
          
        '400':
          $ref: "#/components/responses/400Error"
          
  /project/{id}:
    patch:
      summary: Update an existing project
      description: Allows you to update or edit an existing project. For example, you can update the tag to deploy when you have made and pushed a new build, or change the image to run entirely.
      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: '#/components/parameters/account'
      responses:
        '200':
          description: The was updated successfully, and returned the updated project information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/App"
        '400':
          $ref: "#/components/responses/400Error"
    get:
      summary: Get an existing project given by ID 
      description: Allows you to see an existing project's configuration
      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: '#/components/parameters/account'
      responses:
        '200':
          description: The was updated successfully, and returned the updated project information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/App"
        '400':
          $ref: "#/components/responses/400Error"
          
    
    
components:
  parameters:
    account:
      name: account
      in: header
      required: true
      description: The account to use for the request
      schema:
        type: string
      example: my-account
    project_id:
      name: id
      in: path
      required: true
      schema:
        type: string
        description: The project to look at
        example: hello-world
  
  responses:
    400Error:
      description: "Request issued incorrectly, for example missing parameters or wrong endpoint"
      content: 
        application/json:
          schema:
            $ref: "#/components/schemas/400Error"
            
  
  # requestBodies:
  
  schemas:
    App:
      type: object
      properties:
        id: 
          type: string 
          description: The short name (slug/url) of the project
          example: hello-world
        name:
          type: string
          description: The name of the app
          example: Hello World
        image:
          type: string 
          description: The container image to run for this app 
          example: "wordpress"
        tag:
          type: string 
          description: The image tag to run for this app
          example: "6.0"
          
    400Error:
      type: object
      properties:
        error_code:
          type: number
          description: The code of the error message (400)
          example: 400
          default: 400
        error_message:
          type: string
          description: The human-readable description of what went wrong
          example: Missing required parameter 'account'
      
