openapi: 3.0.0
info:
  description: "The API for the simple containerisation solution Podinate. Login should\
    \ be performed over oauth from [auth.podinate.com](https://auth.podinate.com)"
  title: Podinate API
  version: 0.0.1
servers:
- description: Main (production) server
  url: https://api.podinate.com/v0
- description: Internal staging server for testing
  url: http://staging-api.example.com
tags:
- description: Operations related to your account
  name: Account
- description: Operations related to your projects
  name: Project
paths:
  /account:
    delete:
      description: Deletes the account and all associated resources! This is irreversible
        and may be used for example when a client project has finished or a migration
        is complete.
      parameters:
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Podinate receieved your request to delete the account - it
            will be processed in the background.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Delete the account and all associated resources!
      tags:
      - Account
    get:
      description: "Accounts are logically separate, distinct containers for different\
        \ customers or teams. For example you might have an account for your marketing\
        \ and product teams, or you might have an account for each client to separate\
        \ their workloads. Accounts can have their own security settings applied."
      parameters:
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Information about the given account
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request could not be completed due to a conflict with the
            current state of the resource
      summary: Get information about the current account.
      tags:
      - Account
    patch:
      description: "Update an existing account, for example to change the display\
        \ name"
      parameters:
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Update an existing account
      tags:
      - Account
    post:
      description: "Create a new logically separate account, for example for a given\
        \ client or team."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Create a new account
      tags:
      - Account
  /project:
    get:
      description: "Projects are a container for individual resources. For example\
        \ the my-cool-blog project might contain a pod running a Wordpress image,\
        \ a Postgres Neon database, and a bucket for storing uploads."
      parameters:
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The page number to return (starts at 0)
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The amount of items to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: A JSON array of apps
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Returns a list of projects.
      tags:
      - Project
    post:
      description: Creating a new project
      parameters:
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: A JSON object containing the information needed to create a new
          project
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The project was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Create a new project
      tags:
      - Project
  /project/{id}:
    delete:
      description: "Allows you to delete an existing project. This will delete all\
        \ associated resources, and is irreversible. Use with caution!"
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: The project to look at
          example: hello-world
          type: string
        style: simple
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: "We received your request to delete the project, it will be\
            \ processed in the background."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Delete an existing project
      tags:
      - Project
    get:
      description: Allows you to see an existing project's configuration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: The project to look at
          example: hello-world
          type: string
        style: simple
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: "The was updated successfully, and returned the updated project\
            \ information"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An internal server error
      summary: Get an existing project given by ID
      tags:
      - Project
    patch:
      description: "Allows you to update or edit an existing project. For example,\
        \ you can update the tag to deploy when you have made and pushed a new build,\
        \ or change the image to run entirely."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: The project to look at
          example: hello-world
          type: string
        style: simple
      - description: The account to use for the request
        example: my-account
        explode: false
        in: header
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: "The was updated successfully, and returned the updated project\
            \ information"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
      summary: Update an existing project
      tags:
      - Project
components:
  parameters:
    account:
      description: The account to use for the request
      example: my-account
      explode: false
      in: header
      name: account
      required: true
      schema:
        type: string
      style: simple
    project_id:
      explode: false
      in: path
      name: id
      required: true
      schema:
        description: The project to look at
        example: hello-world
        type: string
      style: simple
  responses:
    "400Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Request issued incorrectly, for example missing parameters or\
        \ wrong endpoint"
    "404Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The requested resource was not found
    "500Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: An internal server error
    "409Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request could not be completed due to a conflict with the current
        state of the resource
  schemas:
    Account:
      example:
        id: blog-prod
        name: Company Blog - Prod
      properties:
        id:
          description: The short name (slug/url) of the account. The account ID is
            globally unique and cannot be changed.
          example: blog-prod
          type: string
        name:
          description: "The human readable name of the account, used for display purposes."
          example: Tim's Widgets Company Blog - Prod
          type: string
    Project:
      example:
        image: wordpress
        name: Hello World
        id: hello-world
        tag: "6.0"
      properties:
        id:
          description: The short name (slug/url) of the project
          example: hello-world
          type: string
        name:
          description: The name of the app
          example: Hello World
          type: string
        image:
          description: The container image to run for this app
          example: wordpress
          type: string
        tag:
          description: The image tag to run for this app
          example: "6.0"
          type: string
      type: object
    Error:
      properties:
        error_code:
          default: 400
          description: The code of the error message (400)
          example: 400
          type: number
        error_message:
          description: The human-readable description of what went wrong
          example: Missing required parameter 'account'
          type: string
      type: object
