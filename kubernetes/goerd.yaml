# Goerd is what we use to manage postgres schema and migrations 

## Path: kubernetes/goerd.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: goerd-migration-script
  namespace: podinate
data:
  migration.sh: |
    #!/bin/bash
    go install github.com/covrom/goerd/cmd/goerd@latest
    curl -O https://raw.githubusercontent.com/podinate/podinate/main/database/goerd.yaml
    goerd -c apply -from goerd.yaml -to "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: goerd
  namespace: podinate
  labels:
    app: goerd
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: goerd
          image: golang:1.22
          command: [ "/migrations/migration.sh" ]
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: masterdb-secret
                  key: superUserPassword
            - name: POSTGRES_DB
              value: podinate
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: GOERD_MIGRATIONS_DIR
              value: /migrations
          volumeMounts:
            - name: goerd-migration-script
              mountPath: /migrations
      volumes:
        - name: goerd-migration-script
          configMap:
            name: goerd-migration-script
            items:
              - key: migration.sh
                path: migration.sh
            defaultMode: 0777
