/*
Podinate API

The API for the simple containerisation solution Podinate.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
)

// checks if the PodSharedVolumesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodSharedVolumesInner{}

// PodSharedVolumesInner struct for PodSharedVolumesInner
type PodSharedVolumesInner struct {
	// The short name (slug/url) of the shared volume
	VolumeId string `json:"volume_id"`
	// The path to mount the shared volume at
	Path string `json:"path"`
}

// NewPodSharedVolumesInner instantiates a new PodSharedVolumesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodSharedVolumesInner(volumeId string, path string) *PodSharedVolumesInner {
	this := PodSharedVolumesInner{}
	this.VolumeId = volumeId
	this.Path = path
	return &this
}

// NewPodSharedVolumesInnerWithDefaults instantiates a new PodSharedVolumesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodSharedVolumesInnerWithDefaults() *PodSharedVolumesInner {
	this := PodSharedVolumesInner{}
	return &this
}

// GetVolumeId returns the VolumeId field value
func (o *PodSharedVolumesInner) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *PodSharedVolumesInner) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *PodSharedVolumesInner) SetVolumeId(v string) {
	o.VolumeId = v
}

// GetPath returns the Path field value
func (o *PodSharedVolumesInner) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *PodSharedVolumesInner) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *PodSharedVolumesInner) SetPath(v string) {
	o.Path = v
}

func (o PodSharedVolumesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodSharedVolumesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["volume_id"] = o.VolumeId
	toSerialize["path"] = o.Path
	return toSerialize, nil
}

type NullablePodSharedVolumesInner struct {
	value *PodSharedVolumesInner
	isSet bool
}

func (v NullablePodSharedVolumesInner) Get() *PodSharedVolumesInner {
	return v.value
}

func (v *NullablePodSharedVolumesInner) Set(val *PodSharedVolumesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePodSharedVolumesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePodSharedVolumesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodSharedVolumesInner(val *PodSharedVolumesInner) *NullablePodSharedVolumesInner {
	return &NullablePodSharedVolumesInner{value: val, isSet: true}
}

func (v NullablePodSharedVolumesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodSharedVolumesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
