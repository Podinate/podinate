/*
 * Podinate API
 *
 * The API for the simple containerisation solution Podinate
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"database/sql"
	"fmt"
	"log"
	"net/http"

	_ "github.com/lib/pq"

	api "github.com/johncave/podinate/api-backend/go"
)

func main() {
	log.Printf("Server starting...")

	crdb := fmt.Sprintf("host=%s port=%d dbname=%s sslmode=verify-full sslrootcert=/cockroach/cockroach-certs/ca.crt sslkey=/cockroach/cockroach-certs/client.root.key sslcert=/cockroach/cockroach-certs/client.root.crt", "masterdb-public", 26257, "podinate")
	db, err := sql.Open("postgres", crdb)
	if err != nil {
		log.Fatal(err)
	}
	defer db.Close()
	// ping the db to check the connection
	err = db.Ping()
	if err != nil {
		log.Fatal(err)
	}
	log.Println("Connected to database")

	//DefaultApiService := api.NewDefaultApiService()

	DefaultApiService := NewAPIService()
	DefaultApiController := api.NewDefaultApiController(DefaultApiService)

	router := api.NewRouter(DefaultApiController)

	log.Fatal(http.ListenAndServe(":3000", router))
}
