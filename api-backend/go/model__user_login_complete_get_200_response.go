/*
 * Podinate API
 *
 * The API for the simple containerisation solution Podinate. Login should be performed over oauth from [auth.podinate.com](https://auth.podinate.com)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type UserLoginCompleteGet200Response struct {

	// Whether the user is logged in or not
	LoggedIn bool `json:"logged_in,omitempty"`

	// The user's API key, if they are logged in
	ApiKey string `json:"api_key,omitempty"`
}

// AssertUserLoginCompleteGet200ResponseRequired checks if the required fields are not zero-ed
func AssertUserLoginCompleteGet200ResponseRequired(obj UserLoginCompleteGet200Response) error {
	return nil
}

// AssertRecurseUserLoginCompleteGet200ResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserLoginCompleteGet200Response (e.g. [][]UserLoginCompleteGet200Response), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserLoginCompleteGet200ResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserLoginCompleteGet200Response, ok := obj.(UserLoginCompleteGet200Response)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUserLoginCompleteGet200ResponseRequired(aUserLoginCompleteGet200Response)
	})
}
