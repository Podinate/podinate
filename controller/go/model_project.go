/*
 * Podinate API
 *
 * The API for the simple containerisation solution Podinate.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Project - A project is a container for individual resources. For example the my-cool-blog project might contain a pod running a Wordpress image, a Postgres Neon database, and a bucket for storing uploads.
type Project struct {

	// The short name (slug/url) of the project
	Id string `json:"id,omitempty"`

	// The name of the app
	Name string `json:"name,omitempty"`

	// The global Resource ID of the project
	ResourceId string `json:"resource_id,omitempty"`
}

// AssertProjectRequired checks if the required fields are not zero-ed
func AssertProjectRequired(obj Project) error {
	return nil
}

// AssertRecurseProjectRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Project (e.g. [][]Project), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseProjectRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aProject, ok := obj.(Project)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertProjectRequired(aProject)
	})
}
