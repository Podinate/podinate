openapi: 3.0.0
info:
  description: The API for the simple containerisation solution Podinate. Login should be performed over oauth from [auth.podinate.com](https://auth.podinate.com)
  title: Podinate API
  version: 0.0.1
servers:
- description: Main (production) server
  url: https://api.podinate.com/v0
- description: Internal staging server for testing
  url: http://staging-api.example.com
paths:
  /account:
    get:
      summary: Get information about the current account.
      description: Accounts are logically separate, distinct containers for different customers or teams. For example you might have an account for your marketing and product teams, or you might have an account for each client to separate their workloads. Accounts can have their own security settings applied.
      parameters:
        - $ref: '#/components/parameters/account'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Information about the given account
    post:
      summary: Create a new account
      description: Create a new logically separate account, for example for a given client or team.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "201":
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "500":
          description: An internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
    patch:
      summary: Update an existing account
      description: Update an existing account, for example to change the display name
      parameters:
      - $ref: '#/components/parameters/account'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        "200":
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "500":
          description: An internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        
  /project:
    get:
      summary: Returns a list of projects.
      description: Projects are a container for individual resources. For example the my-cool-blog project might contain a pod running a Wordpress image, a Postgres Neon database, and a bucket for storing uploads.
      parameters:
        - $ref: '#/components/parameters/account'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: A JSON array of apps
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
          description: An internal server error
      
    post:
      summary: Create a new project
      description: Creating a new project
      parameters:
        - $ref: '#/components/parameters/account'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: A JSON object containing the information needed to create a new
          project
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The project was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
          description: An internal server error
  /project/{id}:
    get:
      summary: Get an existing project given by ID
      description: Allows you to see an existing project's configuration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: The project to look at
          example: hello-world
          type: string
        style: simple
      - $ref: '#/components/parameters/account'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: "The was updated successfully, and returned the updated project\
            \ information"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
          description: An internal server error
    patch:
      summary: Update an existing project
      description: "Allows you to update or edit an existing project. For example,\
        \ you can update the tag to deploy when you have made and pushed a new build,\
        \ or change the image to run entirely."
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: The project to look at
          example: hello-world
          type: string
        style: simple
      - $ref: '#/components/parameters/account'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: "The was updated successfully, and returned the updated project\
            \ information"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
          description: "Request issued incorrectly, for example missing parameters\
            \ or wrong endpoint"
      
components:
  parameters:
    account:
      description: The account to use for the request
      example: my-account
      explode: false
      in: header
      name: account
      required: true
      schema:
        type: string
      style: simple
    project_id:
      explode: false
      in: path
      name: id
      required: true
      schema:
        description: The project to look at
        example: hello-world
        type: string
      style: simple
  responses:
    "400Error":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400Error'
      description: "Request issued incorrectly, for example missing parameters or\
        \ wrong endpoint"
  schemas:
    Account:
      example:
        id: "blog-prod"
        name: "Company Blog - Prod"
      properties:
        id:
          description: The short name (slug/url) of the account. The account ID is globally unique and cannot be changed.
          example: "blog-prod"
          type: string 
        name:
          description: The human readable name of the account, used for display purposes.
          example: "Tim's Widgets Company Blog - Prod"
          type: string
    Project:
      example:
        image: wordpress
        name: Hello World
        id: hello-world
        tag: "6.0"
      properties:
        id:
          description: The short name (slug/url) of the project
          example: hello-world
          type: string
        name:
          description: The name of the app
          example: Hello World
          type: string
        image:
          description: The container image to run for this app
          example: wordpress
          type: string
        tag:
          description: The image tag to run for this app
          example: "6.0"
          type: string
      type: object
    "400Error":
      properties:
        error_code:
          default: 400
          description: The code of the error message (400)
          example: 400
          type: number
        error_message:
          description: The human-readable description of what went wrong
          example: Missing required parameter 'account'
          type: string
      type: object
    "500Error":
      properties:
        code:
          description: The error code for this error
          example: 500
          type: number
        message:
          description: Friendly human readable description of the error
          example: There was an error creating your pod due to account limits
          type: string
      type: object
  