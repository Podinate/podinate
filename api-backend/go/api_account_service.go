/*
 * Podinate API
 *
 * The API for the simple containerisation solution Podinate.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// AccountApiService is a service that implements the logic for the AccountApiServicer
// This service should implement the business logic for every endpoint for the AccountApi API.
// Include any external packages or services that will be required by this service.
type AccountApiService struct {
}

// NewAccountApiService creates a default api service
func NewAccountApiService() AccountApiServicer {
	return &AccountApiService{}
}

// AccountDelete - Delete the account and all associated resources!
func (s *AccountApiService) AccountDelete(ctx context.Context, account string) (ImplResponse, error) {
	// TODO - update AccountDelete with the required logic for this service method.
	// Add api_account_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(202, Account{}) or use other options such as http.Ok ...
	//return Response(202, Account{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AccountDelete method not implemented")
}

// AccountGet - Get information about the current account.
func (s *AccountApiService) AccountGet(ctx context.Context, account string) (ImplResponse, error) {
	// TODO - update AccountGet with the required logic for this service method.
	// Add api_account_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Account{}) or use other options such as http.Ok ...
	//return Response(200, Account{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AccountGet method not implemented")
}

// AccountPatch - Update an existing account
func (s *AccountApiService) AccountPatch(ctx context.Context, account string, account2 Account) (ImplResponse, error) {
	// TODO - update AccountPatch with the required logic for this service method.
	// Add api_account_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Account{}) or use other options such as http.Ok ...
	//return Response(200, Account{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AccountPatch method not implemented")
}

// AccountPost - Create a new account
func (s *AccountApiService) AccountPost(ctx context.Context, account Account) (ImplResponse, error) {
	// TODO - update AccountPost with the required logic for this service method.
	// Add api_account_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, Account{}) or use other options such as http.Ok ...
	//return Response(201, Account{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AccountPost method not implemented")
}
