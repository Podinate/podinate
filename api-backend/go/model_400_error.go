/*
 * Podinate API
 *
 * The API for the simple containerisation solution Podinate
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type Model400Error struct {

	// The code of the error message (400)
	ErrorCode float32 `json:"error_code,omitempty"`

	// The human-readable description of what went wrong
	ErrorMessage string `json:"error_message,omitempty"`
}

// AssertModel400ErrorRequired checks if the required fields are not zero-ed
func AssertModel400ErrorRequired(obj Model400Error) error {
	return nil
}

// AssertRecurseModel400ErrorRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Model400Error (e.g. [][]Model400Error), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseModel400ErrorRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aModel400Error, ok := obj.(Model400Error)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertModel400ErrorRequired(aModel400Error)
	})
}
