/*
Podinate API

The API for the simple containerisation solution Podinate.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
)

// checks if the ProjectGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectGet200Response{}

// ProjectGet200Response struct for ProjectGet200Response
type ProjectGet200Response struct {
	Items []ProjectGet200ResponseItemsInner `json:"items,omitempty"`
	// The total number of projects
	Total *int32 `json:"total,omitempty"`
	// The current page number
	Page *int32 `json:"page,omitempty"`
	// The number of items per page
	Limit *int32 `json:"limit,omitempty"`
}

// NewProjectGet200Response instantiates a new ProjectGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectGet200Response() *ProjectGet200Response {
	this := ProjectGet200Response{}
	return &this
}

// NewProjectGet200ResponseWithDefaults instantiates a new ProjectGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectGet200ResponseWithDefaults() *ProjectGet200Response {
	this := ProjectGet200Response{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ProjectGet200Response) GetItems() []ProjectGet200ResponseItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []ProjectGet200ResponseItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectGet200Response) GetItemsOk() ([]ProjectGet200ResponseItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ProjectGet200Response) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ProjectGet200ResponseItemsInner and assigns it to the Items field.
func (o *ProjectGet200Response) SetItems(v []ProjectGet200ResponseItemsInner) {
	o.Items = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ProjectGet200Response) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectGet200Response) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ProjectGet200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ProjectGet200Response) SetTotal(v int32) {
	o.Total = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ProjectGet200Response) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectGet200Response) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ProjectGet200Response) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *ProjectGet200Response) SetPage(v int32) {
	o.Page = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ProjectGet200Response) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectGet200Response) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ProjectGet200Response) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ProjectGet200Response) SetLimit(v int32) {
	o.Limit = &v
}

func (o ProjectGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	return toSerialize, nil
}

type NullableProjectGet200Response struct {
	value *ProjectGet200Response
	isSet bool
}

func (v NullableProjectGet200Response) Get() *ProjectGet200Response {
	return v.value
}

func (v *NullableProjectGet200Response) Set(val *ProjectGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectGet200Response(val *ProjectGet200Response) *NullableProjectGet200Response {
	return &NullableProjectGet200Response{value: val, isSet: true}
}

func (v NullableProjectGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


