// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/podinate/terraform-provider-podinate/internal/sdk/pkg/models/shared"
	"net/http"
)

type GetUserLoginInitiateRequest struct {
	// The oauth provider to use. Valid options will be github / gitlab / podinate, during alpha only podinate is allowed.
	Provider *string `queryParam:"style=form,explode=true,name=provider"`
}

func (o *GetUserLoginInitiateRequest) GetProvider() *string {
	if o == nil {
		return nil
	}
	return o.Provider
}

// GetUserLoginInitiateResponseBody - A redirect URL to send the user to to complete the login flow, and a token to use to get the user's actual API key once they have completed the oauth flow
type GetUserLoginInitiateResponseBody struct {
	// The URL to redirect the user to
	URL *string `json:"url,omitempty"`
	// The token to use to get the user's actual API key once they have completed the oauth flow
	Token *string `json:"token,omitempty"`
}

func (o *GetUserLoginInitiateResponseBody) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *GetUserLoginInitiateResponseBody) GetToken() *string {
	if o == nil {
		return nil
	}
	return o.Token
}

type GetUserLoginInitiateResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A redirect URL to send the user to to complete the login flow, and a token to use to get the user's actual API key once they have completed the oauth flow
	Object *GetUserLoginInitiateResponseBody
	// Request issued incorrectly, for example missing parameters or wrong endpoint
	Error *shared.Error
}

func (o *GetUserLoginInitiateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUserLoginInitiateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUserLoginInitiateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetUserLoginInitiateResponse) GetObject() *GetUserLoginInitiateResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *GetUserLoginInitiateResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
